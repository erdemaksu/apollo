syntax = "proto3";

// **************************************************************
//
// Apollo PDU Descriptions.
//
// **************************************************************

message ApolloPdu {
    Version version = 1;
    int32 transaction_id = 2;
    Procedure procedure =3;
}

message Procedure {
    oneof procedures {
        AuthExchange auth_exchange = 1;
	Error error = 2;
	Response response = 3;
	CreateTable create_table = 4;
	DeleteTable delete_table = 5;
	OpenTable open_table = 6;
	CloseTable close_table = 7;
	TableInfo table_info = 8;
	Read read = 9;
	Write write = 10;
	Delete delete = 11;
	ReadRange read_range = 12;
	ReadRangeN read_range_n = 13;
	BatchWrite batch_write = 14;
	First first = 15;
	Last last = 16;
	Seek seek = 17;
	Next next = 18;
	Prev prev = 19;
    }
}

// **************************************************************
//
// Apollo Procedure Definitions.
//
// **************************************************************
message AuthExchange {
    bytes payload = 1;
}

message BatchWrite {
    string table_name = 1;
    repeated Field delete_keys = 2;
    repeated KeyColumnsPair write_kvps = 3;
}

message CloseTable {
    string table_name = 1;
}

message CreateTable {
    string table_name = 1;
    repeated string keys = 2;
    repeated string columns = 3;
    repeated string indexes = 4;
    repeated TableOption table_options = 5;
}


message Delete {
    string tableName = 1;
    repeated Field key = 2;
}

message DeleteTable {
    string table_name = 1;
}

message Error {
    oneof causes {
	string transport = 1;
	string protocol = 2;
	string system = 3;
	string misc = 4;
    }
}

message OpenTable {
    string table_name = 1;
}

message Read {
    string table_name = 1;
    repeated Field key = 2;
}

message ReadRange {
    string table_name = 1;
    repeated Field start_key = 2;
    repeated Field end_key = 3;
    int32 limit	= 4;
}

message ReadRangeN  {
    string table_name = 1;
    repeated Field start_key = 2;
    int32 n = 3;
}

message Response {
    Result result = 1;
    bool more_data_to_be_sent = 2;
}

message Result {
    oneof results {
	Fields columns = 1;
	KeyColumnsPair key_columns_pair	= 2;
	KeyColumnsList	key_columns_list = 3;
	Fields proplist = 4;
	KcpIt kcpIt = 5;
    }
}

message TableInfo {
    string table_ame = 1;
    repeated string attributes = 2;
}

message Write {
    string table_name = 1;
    repeated Field key = 2;
    repeated Field columns = 3;
}

message First {
    string table_name  = 1;
}

message Last {
    string table_name = 1;
}

message Seek {
    string table_name = 1;
    repeated Field key = 2;
}

message Next {
    bytes it =1;
}

message Prev {
    bytes it = 1;
}

// **************************************************************
//
// Common IE Definitions.
//
// **************************************************************

message Cluster {
    string name	=1;
    int32 replication_factor = 2;
}

enum Comparator {
    DESCENDING = 0;
    ASCENDIN = 1;
}

message Continuation {
    bool complete = 1;
    repeated Field key	= 2;
}

enum DataModel	{
    BINARY = 0;
    ARRAY = 1;
    HASH = 2;
}

message Field {
    string name	= 1;
    Value value = 2;
}

message Fields {
    repeated Field fields = 1;
}

message KeyColumnsPair {
    repeated Field key = 1;
    repeated Field columns = 2;
}

message KeyColumnsList {
    repeated KeyColumnsPair list = 1;
    Continuation continuation = 2;
}

message KcpIt {
    KeyColumnsPair  key_columns_pair = 1;
    bytes it = 2;
}

message SizeMargin {
    oneof units {
	int32 megabytes = 1;
    }
}

message TableOption {
    oneof options {
	Type type = 1;
	DataModel data_model = 2;
	Wrapper	wrapper = 3;
	Wrapper	mem_wrapper = 4;
	Comparator comparator = 5;
	bool time_series = 6;
	int32 shards = 7;
    }
}

message TimeMargin {
    oneof units {
	int32 seconds = 1;
	int32 minutes = 2;
	int32 hours = 3;
    }
}

enum Type {
    LEVELDB = 0;
    MEMLEVELDB = 1;
    LEVELDBWRAPPED = 2;
    MEMLEVELDBWRAPPED = 3;
}

message Value {
    oneof values {
	bool boolean = 1;
	int32 int = 2;
	bytes binary = 3;
	bytes null = 4;
	double double = 5;
	string string = 6;
    }
}

message Version {
    int32 major = 1;
    int32 minor = 2;
}

message Wrapper {
    int32 num_of_buckets = 1;
    TimeMargin time_margin = 2;
    SizeMargin size_margin = 3;
}
