-- **************************************************************
--
-- Apollo PDU Descriptions.
--
-- **************************************************************
APOLLO-PDU-Descriptions {
}

DEFINITIONS AUTOMATIC TAGS ::=

BEGIN

APOLLO-PDU	    ::= SEQUENCE {
    version		Version,
    transactionId	INTEGER (0..65535),
    procedure		Procedure,
    ...
}

Procedure	    ::= CHOICE {
    authExchange	AuthExchange,
    error		Error,
    response		Response,
    createTable		CreateTable,
    deleteTable		DeleteTable,
    openTable		OpenTable,
    closeTable		CloseTable,
    tableInfo		TableInfo,
    read		Read,
    write		Write,
    delete		Delete,
    readRange		ReadRange,
    readRangeN		ReadRangeN,
    batchWrite		BatchWrite,
    first		First,
    last		Last,
    seek		Seek,
    next		Next,
    prev		Prev,
    ...
}

-- **************************************************************
--
-- Apollo Procedure Definitions.
--
-- **************************************************************
AuthExchange	    ::= SEQUENCE {
    payload		OCTET STRING,
    ...
}

BatchWrite	    ::= SEQUENCE {
    tableName		FieldName,
    deleteKeys		SEQUENCE OF Key,
    writeKvps		SEQUENCE OF KeyColumnsPair,
    ...
}

CloseTable	    ::= SEQUENCE {
    tableName		FieldName,
    ...
}

CreateTable	    ::= SEQUENCE {
    tableName		FieldName,
    keys		SEQUENCE OF FieldName,
    columns		SEQUENCE OF FieldName,
    indexes		SEQUENCE OF FieldName,
    tableOptions	SET OF TableOption,
    ...

}


Delete		    ::= SEQUENCE {
    tableName		FieldName,
    key			Key,
    ...

}

DeleteTable	    ::= SEQUENCE {
    tableName		FieldName,
    ...

}

Error		    ::= SEQUENCE {
    cause		Cause OPTIONAL,
    ...

}

OpenTable	    ::= SEQUENCE {
    tableName		FieldName,
    ...

}

Read		   ::=	SEQUENCE {
    tableName		FieldName,
    key			Key,
    ...

}

ReadRange	    ::= SEQUENCE {
    tableName		FieldName,
    keyRange		KeyRange,
    limit		INTEGER,
    ...

}

ReadRangeN	    ::= SEQUENCE {
    tableName		FieldName,
    startKey		Key,
    n			INTEGER,
    ...

}

Response	    ::= SEQUENCE {
    result		Result OPTIONAL,
    moreDataToBeSent	BOOLEAN OPTIONAL,
    ...

}

Result		    ::= CHOICE {
    value		Value,
    keyValuePair	KeyValuePair,
    keyValueList	SET OF KeyValuePair,
    kvpIt		KvpIt,
    ...

}

TableInfo	    ::= SEQUENCE {
    tableName           FieldName,
    attributes		SET OF FieldName OPTIONAL,
    ...

}

Write		    ::= SEQUENCE {
    tableName		FieldName,
    key			Key,
    columns		Columns,
    ...

}

First		    ::= SEQUENCE {
    tableName		FieldName,
    ...

}

Last		    ::= SEQUENCE {
    tableName		FieldName,
    ...

}

Seek		    ::= SEQUENCE {
    tableName		FieldName,
    key			Key,
    ...

}

Next		    ::= SEQUENCE {
    it			It,
    ...

}

Prev		    ::= SEQUENCE {
    it			It,
    ...

}

-- **************************************************************
--
-- Common IE Definitions.
--
-- **************************************************************

Type		    ::= ENUMERATED {
    leveldb		(0),
    etsLeveldb		(1),
    ...

}

Columns		    ::= SEQUENCE OF Field

DataModel	    ::= ENUMERATED {
    binary		(0),
    array		(1),
    set			(2),
    ...

}

Cause		    ::= CHOICE {
    transport		IA5String (SIZE(1..32)),
    protocol		IA5String (SIZE(1..32)),
    system		IA5String (SIZE(1..32)),
    misc		IA5String (SIZE(1..32)),
    ...

}

Field		    ::= SEQUENCE {
    name		FieldName,
    value		Value,
    ...

}

-- Limit Fieldname Chars to (a..z)
FieldName	    ::= IA5String (SIZE(1..16))

FileMargin	    ::= INTEGER (1..128)

Key		    ::= SEQUENCE OF Field

KeyRange	    ::= SEQUENCE {
    start		Key,
    end			Key,
    ...

}

KeyColumnsPair	    ::= SEQUENCE {
    key			Key,
    columns		Columns,
    ...

}

KeyValuePair	    ::= SEQUENCE {
    key			Key,
    value		Value

}

KvpIt		    ::= SEQUENCE {
    keyValuePair	KeyValuePair,
    it			It,
    ...

}

It		    ::= OCTET STRING

TableOption	    ::= CHOICE {
    timeOrdered		BOOLEAN,
    wrapped		Wrapper,
    type		Type,
    ...

}

TimeMargin	    ::= INTEGER (0..4294967295)

Value		    ::= OCTET STRING

Version		    ::= SEQUENCE {
    major		INTEGER (0..15),
    minor		INTEGER (0..15),
    ...

}

Wrapper		    ::= SEQUENCE {
    fileMargin		FileMargin,
    timeMargin		TimeMargin,
    ...

}

maxNumOfKeyFields   INTEGER ::= 16

maxNumOfColumns	    INTEGER ::= 255

maxNumOfIndexes	    INTEGER ::= 8

--ProcedureCode	    ::= INTEGER (0..255)

END
